{"version":3,"sources":["components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","Context/ChatProvider.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","_useState","useState","_useState2","_slicedToArray","show","setShow","toast","useToast","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","history","useHistory","submitHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","localStorage","setItem","JSON","stringify","window","location","reload","push","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","children","FormControl","id","isRequired","_jsx","FormLabel","Input","value","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","p","accept","pics","undefined","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","postDetails","files","Homepage","socket","selectedChatCompare","useEffect","parse","getItem","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","ProfileModal","user","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ChatContext","createContext","ChatState","useContext","ChatProvider","selectedChat","setSelectedChat","setUser","notification","setNotification","chats","setChats","userInfo","Provider","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","_ref2","query","_yield$axios$get","Authorization","token","get","_x","handleRename","_ref3","_callee2","_yield$axios$put","_context2","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","preventDefault","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","onSubmit","Chatpage","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.fa5594fb.chunk.js","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    // console.log(email, password);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      // console.log(JSON.stringify(data));\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      window.location.reload(); // Reload the page\n\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      window.location.reload(); // Reload the page\n      history.push(\"/chats\");\n\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app\");\n      data.append(\"cloud_name\", \"de94ufycz\");\n      fetch(\"https://api.cloudinary.com/v1_1/de94ufycz/image/upload\", {\n        method: \"post\",\n        body: data,\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          console.log(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          console.log(err);\n          setPicLoading(false);\n        });\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Sat-Chat Application\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"inherit\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n// import { ChatState } from \"../../Context/ChatProvider\";\n\nconst UserListItem = ({user, handleFunction }) => {\n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport \"./styles.css\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n      id=\"chat-back\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\nimport \"./styles.css\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text className=\"chat-overview\">\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport \"./../styles.css\"\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async (event) => {\n    event.preventDefault() ;\n\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n        id=\"head-bar\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Sat-Chat Application\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n\n              <form onSubmit={handleSearch}>\n                <Box d=\"flex\" pb={2}>\n                  <Input\n                    placeholder=\"Search by name or email\"\n                    mr={2}\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                  />\n                  <Button type=\"submit\">Go</Button>\n                </Box>\n              </form>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}